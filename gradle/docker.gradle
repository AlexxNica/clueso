buildscript {
    repositories {
        jcenter()

        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:3.1.0'
        classpath "com.avast.gradle:gradle-docker-compose-plugin:0.6.1"
    }
}

apply plugin: com.avast.gradle.dockercompose.DockerComposePlugin

dockerCompose.isRequiredBy(test)

dockerCompose {
    useComposeFiles = ['docker/docker-compose.yml']
}

test.doFirst {


    // exposes "${serviceName}_HOST" and "${serviceName}_TCP_${exposedPort}" environment variables
    // for example exposes "WEB_HOST" and "WEB_TCP_80" environment variables for service named `web` with exposed port `80`
    // if service is scaled using scale option, environment variables will be exposed for each service instance like "WEB_1_HOST", "WEB_1_TCP_80", "WEB_2_HOST", "WEB_2_TCP_80" and so on
    dockerCompose.exposeAsEnvironment(test)
    // exposes "${serviceName}.host" and "${serviceName}.tcp.${exposedPort}" system properties
    // for example exposes "web.host" and "web.tcp.80" system properties for service named `web` with exposed port `80`
    // if service is scaled using scale option, environment variables will be exposed for each service instance like "web_1.host", "web_1.tcp.80", "web_2.host", "web_2.tcp.80" and so on
    dockerCompose.exposeAsSystemProperties(test)
    // get information about container of service `web` (declared in docker-compose.yml)
}


apply plugin: com.bmuschko.gradle.docker.DockerRemoteApiPlugin

import com.bmuschko.gradle.docker.tasks.image.*

task buildGraphiteImage(type: DockerBuildImage) {
    inputDir = file('docker/images/grafana_graphite')
    tag = 'scality/grafana_graphite:latest'
}

task buildLivyImage(type: DockerBuildImage) {
    inputDir = file('docker/images/clueso-docker-livy')
    tag = 'scality/clueso-livy:0.4.0-alluxio'
}

//buildLivyImage.isRequiredBy(dockerCompose)

task builSparkBaseImage(type: DockerBuildImage) {
    inputDir = file('docker/images/docker-spark/base')
    tag = 'scality/spark-base:hadoop2.8-2.2'
}


dockerCompose.doFirst {
    builSparkBaseImage
    buildGraphiteImage
}


