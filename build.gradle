plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '2.0.1'
    id "com.github.maiflai.scalatest" version "0.16"
}

group 'com.scality.clueso'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    provided
    compile.extendsFrom provided
}

configurations.runtime {
    exclude group: 'org.scala-lang'
    exclude group: 'org.apache.spark', module: 'spark-sql_'+scalaVersion
    exclude group: 'org.apache.spark', module: 'spark-streaming_'+scalaVersion
    exclude group: 'org.apache.spark', module: 'spark-core_'+scalaVersion
}

sourceSets {
    main {
        compileClasspath += configurations.provided

        resources {
            filter.exclude("application.conf")
        }
    }
}

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

dependencies {
    compile group: 'org.scala-lang', name: 'scala-library', version: '2.11.8'
    compile group: 'org.scala-lang', name: 'scala-reflect', version: '2.11.8'
    compile group: 'org.scala-lang', name: 'scala-compiler', version: '2.11.8'

//    provided group: 'org.scala-lang', name: 'scala-library', version: '2.10.6'
//    provided group: 'org.scala-lang', name: 'scala-reflect', version: '2.10.6'
//    provided group: 'org.scala-lang', name: 'scala-compiler', version: '2.10.6'


    provided 'org.apache.spark:spark-sql_'+scalaVersion+':' + sparkVersion
    provided 'org.apache.spark:spark-streaming_'+scalaVersion+':' + sparkVersion
    provided 'org.apache.spark:spark-core_'+scalaVersion+':' + sparkVersion

    compile 'org.apache.spark:spark-sql-kafka-0-10_'+scalaVersion+':' + sparkVersion

    compile group: 'org.apache.hadoop', name: 'hadoop-aws', version: '2.8.0'

    compile group: 'com.typesafe', name: 'config', version: '1.3.1'
    compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.0'

    compile group: 'commons-io', name: 'commons-io', version: '2.5'

    compile group: 'com.typesafe.scala-logging', name: 'scala-logging_2.11', version: '3.7.2'

    testCompile 'org.scalatest:scalatest_2.11:3.0.1'
    testRuntime 'org.pegdown:pegdown:1.4.2'
}

task run(type: JavaExec, dependsOn: classes) {
    main = mainClassFile
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
}

task debug(type: JavaExec, dependsOn: classes) {
    main = mainClassFile
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
    debug true
}

shadowJar {
    classifier = 'all'
    zip64 true
}

idea {
    module {
        // IntelliJ does not know about the standard idiom of provided as used in managing
        // uber/shaded jar dependencies. Make it so!
        scopes.PROVIDED.plus += [ configurations.provided ]
    }
}

test {
    maxParallelForks = 1
}